class Solution {
public:
    int v[501][501];
    int dfs(int i , int o ,vector<int>& satisfaction){
        if(i >= satisfaction.size()){
            return 0;
        }
        if(v[i][o] != 0){
            //cout<<11111111<<endl;
            return v[i][o];
        }

        
        int take = dfs(i+1 , o+1 ,satisfaction ) + satisfaction[i] * o;
        int notTake = dfs(i+1 , o ,satisfaction );
        //cout<<take<<' '<<notTake<<endl;
        return  v[i][o] = max(take , notTake);

    }


    int maxSatisfaction(vector<int>& satisfaction) {
        
        sort(satisfaction.begin(), satisfaction.end());
        //cout<<1111111111<<endl;
        return dfs(0 , 1 ,satisfaction);
    }
};
