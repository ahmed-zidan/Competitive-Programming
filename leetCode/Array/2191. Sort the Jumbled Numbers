class Solution {
    
public:
    vector<int> sortJumbled(vector<int>& mapping, vector<int>& nums) {
        priority_queue<pair<int,int>,vector<pair<int,int>> , greater<pair<int,int>>>p;
        int idx = 0;
        for(auto i : nums){
            int x = i;
            vector<int>v;
            if(x == 0){
                v.push_back(mapping[x]);
            }else{
            while(x != 0){
               
                int m = x%10;
                v.push_back(mapping[m]);
                x = x/10;
            }
            }
            int n = 0;
            for(int j = v.size()-1;j>=0;j--){
                n = n*10 + v[j];
            }
            
            //cout<<n<<endl;
            p.push({n , idx++});
        }
        vector<int>m;
        while(!p.empty()){
            auto i= p.top();
            m.push_back(nums[i.second]);
            p.pop();
        }
        return m;

    }
};
