/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    
    
    bool isCompleteTree(TreeNode* root) {
       
       queue<TreeNode*>q;
       q.push(root);
       //bool vNull = false;
       while(!q.empty()){
           
            TreeNode* first = q.front();
            q.pop();
            if(first == NULL){
                first = q.front();
                q.pop();
                while(first == NULL &&!q.empty()){
                   
                    first = q.front();
                    q.pop();
                }
                if(!q.empty() || first != NULL){
                    //cout<<111111<<endl;
                    return false;
                }
                else return true;
            }
            //cout<<first->val<<endl;

            q.push(first->left);
            q.push(first->right);



       }

       return true;



    }
};
