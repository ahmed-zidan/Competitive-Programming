class Solution {
public:
    int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {
        
        sort(worker.begin() , worker.end());
        //priority_queue<pair<int,int> , greater<pair<int,int>>>p;
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>> > p;
        for(int i =0;i<profit.size();i++){
            p.push({difficulty[i],profit[i]});
        }
        int sm = 0;
        int mx = 0;
        for(auto i : worker){
            //cout<<i<<"  "<<p.top().first<<"  "<<p.top().second<<endl;
            while(!p.empty() && i >= p.top().first){
                mx = max(p.top().second , mx);
                p.pop();
            }

            sm+=mx;
        }

        return sm;
    }
};


